(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[907],{3905:function(e,n,t){"use strict";t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},l=Object.keys(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(r=0;r<l.length;r++)t=l[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var c=r.createContext({}),s=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=s(e.components);return r.createElement(c.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},u=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,l=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),u=s(t),f=o,m=u["".concat(c,".").concat(f)]||u[f]||d[f]||l;return t?r.createElement(m,a(a({ref:n},p),{},{components:t})):r.createElement(m,a({ref:n},p))}));function f(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var l=t.length,a=new Array(l);a[0]=u;var i={};for(var c in n)hasOwnProperty.call(n,c)&&(i[c]=n[c]);i.originalType=e,i.mdxType="string"==typeof e?e:o,a[1]=i;for(var s=2;s<l;s++)a[s]=t[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}u.displayName="MDXCreateElement"},6166:function(e,n,t){"use strict";t.r(n),t.d(n,{frontMatter:function(){return i},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return p},default:function(){return u}});var r=t(2122),o=t(9756),l=(t(7294),t(3905)),a=["components"],i={title:"col",sidebar_position:2},c=void 0,s={unversionedId:"Pwnable.kr/Toddlers_Bottle/col",id:"Pwnable.kr/Toddlers_Bottle/col",isDocsHomePage:!1,title:"col",description:"\u539f\u9898\u5185\u5bb9",source:"@site/docs/Pwnable.kr/Toddlers_Bottle/col.md",sourceDirName:"Pwnable.kr/Toddlers_Bottle",slug:"/Pwnable.kr/Toddlers_Bottle/col",permalink:"/docs/Pwnable.kr/Toddlers_Bottle/col",version:"current",sidebarPosition:2,frontMatter:{title:"col",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"fd",permalink:"/docs/Pwnable.kr/Toddlers_Bottle/fd"},next:{title:"bof",permalink:"/docs/Pwnable.kr/Toddlers_Bottle/bof"}},p=[{value:"\u539f\u9898\u5185\u5bb9",id:"\u539f\u9898\u5185\u5bb9",children:[]},{value:"\u7a0b\u5e8f\u6e90\u7801",id:"\u7a0b\u5e8f\u6e90\u7801",children:[]},{value:"\u9898\u76ee\u5206\u6790",id:"\u9898\u76ee\u5206\u6790",children:[]},{value:"\u811a\u672c\u6e90\u7801",id:"\u811a\u672c\u6e90\u7801",children:[]}],d={toc:p};function u(e){var n=e.components,t=(0,o.Z)(e,a);return(0,l.kt)("wrapper",(0,r.Z)({},d,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h2",{id:"\u539f\u9898\u5185\u5bb9"},"\u539f\u9898\u5185\u5bb9"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},"Daddy told me about cool MD5 hash collision today.\nI wanna do something like that too!\n\nssh col@pwnable.kr -p2222 (pw:guest)\n")),(0,l.kt)("h2",{id:"\u7a0b\u5e8f\u6e90\u7801"},"\u7a0b\u5e8f\u6e90\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-c"},'#include <stdio.h>\n#include <string.h>\nunsigned long hashcode = 0x21DD09EC;\nunsigned long check_password(const char* p){\n    int* ip = (int*)p;\n    int i;\n    int res=0;\n    for(i=0; i<5; i++){\n        res += ip[i];\n    }\n    return res;\n}\n\nint main(int argc, char* argv[]){\n    if(argc<2){\n        printf("usage : %s [passcode]\\n", argv[0]);\n        return 0;\n    }\n    if(strlen(argv[1]) != 20){\n        printf("passcode length should be 20 bytes\\n");\n        return 0;\n    }\n\n    if(hashcode == check_password( argv[1] )){\n        system("/bin/cat flag");\n        return 0;\n    }\n    else\n        printf("wrong passcode.\\n");\n    return 0;\n}\n')),(0,l.kt)("h2",{id:"\u9898\u76ee\u5206\u6790"},"\u9898\u76ee\u5206\u6790"),(0,l.kt)("p",null,"\u8fd9\u9053\u9898\u4f1a\u9996\u5148\u68c0\u67e5\u6211\u4eec\u4f20\u5165\u7684\u5185\u5bb9\u662f\u5426\u4e3a20\u4e2a\u5b57\u7b26\uff0c\u5982\u679c\u662f\u5219\u4f20\u5165\u5230\u51fd\u6570",(0,l.kt)("inlineCode",{parentName:"p"},"check_password"),"\u4e2d\u3002"),(0,l.kt)("p",null,"\u5728\u5b57\u7b26\u4e32\u4f20\u5165\u51fd\u6570\u540e\u4f1a\u88ab\u5f3a\u5236\u8f6c\u6362\u4e3a\u6574\u6570\u6570\u7ec4\uff0c\u56e0\u6b64\u662f5\u4e2a\u6574\u6570\uff0c\u51fd\u6570\u63a5\u7740\u628a5\u4e2a\u6574\u6570\u76f8\u52a0\u7136\u540e\u628a\u548c\u8fd4\u56de\u3002"),(0,l.kt)("p",null,"\u6700\u540e\u5728main\u4e2d\u5224\u65ad\u8fd9\u4e2a\u7ed3\u679c\u548c",(0,l.kt)("inlineCode",{parentName:"p"},"hashcode"),"\u7684\u503c\u662f\u5426\u76f8\u7b49\u3002"),(0,l.kt)("p",null,"\u7531\u4e8e\u5b58\u5728",(0,l.kt)("inlineCode",{parentName:"p"},"\\x00"),"\u622a\u65ad\uff0c\u56e0\u6b64\u4e0d\u80fd\u51fa\u73b0",(0,l.kt)("inlineCode",{parentName:"p"},"\\x00"),"\uff0c\u4f7f\u7528\u8ba1\u7b97\u5668\u8ba1\u7b97\u4e00\u4e0b\u5f97\u5230\u53ef\u4ee5\u6784\u9020\u7684\u4e00\u79cd\u53ef\u80fd\uff1a",(0,l.kt)("inlineCode",{parentName:"p"},"0x1DD905E8 + 0x01010101 * 4")),(0,l.kt)("h2",{id:"\u811a\u672c\u6e90\u7801"},"\u811a\u672c\u6e90\u7801"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre",className:"language-python"},"from pwn import *\n\ns = ssh(host = 'pwnable.kr', user = 'col', password = 'guest', port = 2222)\n\nshellcode = p32(0x1DD905E8) + p32(0x01010101) * 4\nprocess = s.process(['./col', shellcode])\nflag = (process.recvline()).decode()\n\nprocess.close()\ns.close()\n\nprint(\"Flag: {}\".format(flag))\n")))}u.isMDXComponent=!0}}]);